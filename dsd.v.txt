module mux32to1_L7L8_04_23BEC0118(Y,S,I);
   input [4:0]S;  
   input [31:0]I;    
   wire [3:0]D;  
   output Y;
assign Y = (~S[4] & ~S[3] & D[0]) |(~S[4] & S[3] & D[1])| (S[4] & ~S[3] & D[2]) |(S[4] & S[3] & D[3]);
assign D[0] = (~S[2] & ~S[1] & ~S[0] & I[0]) | (~S[2]& ~S[1] & S[0] & I[1]) |
              (~S[2] & S[1] & ~S[0] & I[2])  | (~S[2] & S[1] & S[0] & I[3] )|
              (S[2] & ~S[1] & ~S[0] & I[4])  | (S[2] & ~S[1] & S[0] & I[5]) |
              (S[2] & S[1] & ~S[0] & I[6])   | (S[2] & S[1] & S[0] & I[7]);
assign D[1] = (~S[2] & ~S[1] & ~S[0] & I[8]) | (~S[2] & ~S[1]& S[0] & I[9]) |
              ( ~S[2] & S[1] & ~S[0] & I[10])| (~S[2] & S[1] & S[0] & I[11])|
              (S[2] & ~S[1] & ~S[0] & I[12]) | (S[2] & ~S[1] & S[0] & I[13])|
              (S[2] & S[1] & ~S[0] & I[14])  | (S[2] & S[1] & S[0] & I[15]);
assign D[2] = (~S[2] & ~S[1] & ~S[0] & I[16])| (~ S[2] & ~S[1] & S[0] & I[17])| 
              ( ~S[2] & S[1] & ~S[0] & I[18])| (~S[2] & S[1] & S[0] & I[19])  |
              (S[2] & ~S[1] & ~S[0] & I[20]) | (S[2] & ~S[1] & S[0] & I[21] ) | 
              (S[2] & S[1] & ~S[0] & I[22])  | (S[2] & S[1] & S[0] & I[23]);
assign D[3] = (~S[2] & ~S[1] & ~S[0] & I[24])| (~S[2] & ~S[1] & S[0] & I[25])|
            (~S[2]& S[1] & ~S[0] & I[26])  | (~S[2] & S[1] & S[0] & I[27]) |
        (S[2] & ~S[1] & ~S[0] & I[28]) | ( S[2] & ~S[1] & S[0] & I[29])|
        (S[2] & S[1] & ~S[0] & I[30])  | (S[2] & S[1] & S[0] & I[31]);
endmodule
